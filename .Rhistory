}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[2,i])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
View(movies)
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
movies = movies[movies$genres != "[]",]
View(movies)
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
movies$genres[i]
movies$genres[i]
movies$genres
movies$genres[1]
for(i in 1:nrow(movies)){
#movies$genres[i] = convert_json(movies$genres[i])
json_df = fromJSON(movies$genres[i])
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
movies$genres[i] = ret_genres
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
movies = movies[movies$genres != "[]",]
for(i in 1:nrow(movies)){
#movies$genres[i] = convert_json(movies$genres[i])
json_df = fromJSON(movies$genres[i])
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
movies$genres[i] = ret_genres
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
#movies$genres[i] = convert_json(movies$genres[i])
json_df = fromJSON(movies$genres[i])
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
movies$genres[i] = ret_genres
}
json_df = fromJSON(movies$genres[i])
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
#movies$genres[i] = convert_json(movies$genres[i])
json_df = fromJSON(movies$genres[i])
ret_genres=c()
for(j in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[j,2])
}
movies$genres[i] = ret_genres
}
ret_genres
ret_genres
source('~/Desktop/imdb-classification/analysis.R')
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
json_df = fromJSON(movies$genres[1])
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
json_df = fromJSON(movies$genres[1])
json_df[2,1]
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
source('~/Desktop/imdb-classification/analysis.R')
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
warnings()
for(i in 1:nrow(movies)){
movies$keywords[i] = convert_json(movies$keywords[i])
}
movies$genres[1] = ret_genres
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
json_df = fromJSON(movies$genres[1])
json_df[2,1]
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
movies$genres[1] = ret_genres
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
movies$genres = as.vector(movies$genres)
str(movies$genres)
str(movies$genres[1])
str(movies$genres[1615])
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
str(movies$genres[1615])
movies$genres = as.vector(movies$genres)
str(movies$genres[1615])
movies = movies[movies$genres != "[]",]
str(movies$genres[1615])
movies$genres = as.vector(as.character(movies$genres))
str(movies$genres[1615])
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = c(ret_genres,json_df[i,2])
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
str(movies$genres)
a = c(c("a",'b'),c('k','l'))
a
summary(movies$popularity)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
summary(movies$popularity)
ggplot(data=movies,aes(x="vote_average",y=popularity))+geom_boxplot()
ggplot(data=movies,aes(x="popularity",y=popularity))+geom_boxplot()
install.packages("dummies")
library(dummies)
students <- read.csv("data-conversion.csv")
?unlist
t = 'asd'
k = 'd' + t
paste(k,t)
paste(k,t)
paste(ks,t)
t = 'asd'
ks = 'd'
paste(ks,t)
paste(ks,t,sep=',')
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
summary(movies$popularity)
ggplot(data=movies,aes(x="popularity",y=popularity))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
str(movies$genres[1615])
movies$genres = as.vector(as.character(movies$genres))
str(movies$genres)
_
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=c()
for(i in 1:nrow(json_df)){
ret_genres = paste(ret_genres,json_df[i,2],sep=',')
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
summary(movies$popularity)
ggplot(data=movies,aes(x="popularity",y=popularity))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
str(mydf)
str(movies$genres[967])
movies = movies[movies$genres != "[]",]
str(movies$genres[1615])
str(movies$genres)
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=''
for(i in 1:nrow(json_df)){
ret_genres = paste(ret_genres,json_df[i,2],sep=',')
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
for(i in 1:nrow(movies)){
movies$keywords[i] = convert_json(movies$keywords[i])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
summary(movies$popularity)
ggplot(data=movies,aes(x="popularity",y=popularity))+geom_boxplot()
json <- '[{"id": 10751, "name": "Family"}, {"id": 35, "name": "Comedy"}]'
mydf <- fromJSON(movies$genres[967])
mydf
mydf[2,2]
movies = movies[movies$genres != "[]",]
movies = movies[movies$keywords != "[]",]
str(movies$genres[1615])
str(movies$genres)
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=''
for(i in 1:nrow(json_df)){
ret_genres = paste(ret_genres,json_df[i,2],sep=',')
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
for(i in 1:nrow(movies)){
movies$keywords[i] = convert_json(movies$keywords[i])
}
library(stringr)
t <- strsplit(movies$genres, split = ",")
t=t[t!=""]
tags <- unique(str_trim(unlist(t)))
tags = tags[tags!=""]
df2 <- as.data.frame(Reduce(cbind, lapply(tags, function(i) sapply(t, function(j) +(any(grepl(i, j), na.rm = TRUE))))))
names(df2) <- tags
df2
View(df2)
authors <- data.frame(
surname = c("Tukey", "Venables", "Tierney", "Ripley", "McNeil"),
nationality = c("US", "Australia", "US", "UK", "Australia"),
retired = c("yes", rep("no", 4)))
books <- data.frame(
name = c("Tukey", "Venables", "Tierney", "Ripley", "Ripley", "McNeil"),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis"),
other.author = c(NA, "Ripley", NA, NA, NA, NA))
merge(authors, books, by.x="surname", by.y="name")
merge(books, authors, by.x="name", by.y="surname")
View(books)
View(authors)
View(books)
cbind(movies,df2)
a=cbind(movies,df2)
View(a)
View(a)
movies=cbind(movies,df2)
for(i in 1:nrow(movies)){
movies$keywords[i] = convert_json(movies$keywords[i])
}
movies <- read.csv("tmdb_5000_movies.csv",stringsAsFactors = FALSE)
movies = subset(movies,select = c(id,title,genres,keywords,popularity,revenue,runtime,vote_average,vote_count)) #drop unnecessary columns
colnames(movies)
str(movies)
summary(movies$vote_average)
ggplot(data=movies,aes(x="vote_average",y=vote_average))+geom_boxplot()
summary(movies$popularity)
ggplot(data=movies,aes(x="popularity",y=popularity))+geom_boxplot()
movies = movies[movies$genres != "[]",]
movies = movies[movies$keywords != "[]",]
str(movies$genres[1615])
str(movies$genres)
convert_json <- function(x){
json_df = fromJSON(x)
ret_genres=''
for(i in 1:nrow(json_df)){
ret_genres = paste(ret_genres,json_df[i,2],sep=',')
}
return(ret_genres)
}
for(i in 1:nrow(movies)){
movies$genres[i] = convert_json(movies$genres[i])
}
library(stringr)
t <- strsplit(movies$genres, split = ",")
tags <- unique(str_trim(unlist(t)))
tags = tags[tags!=""]
df2 <- as.data.frame(Reduce(cbind, lapply(tags, function(i) sapply(t, function(j) +(any(grepl(i, j), na.rm = TRUE))))))
names(df2) <- tags
df2
movies=cbind(movies,df2)
for(i in 1:nrow(movies)){
movies$keywords[i] = convert_json(movies$keywords[i])
}
t <- strsplit(movies$keywords, split = ",")
tags <- unique(str_trim(unlist(t)))
tags = tags[tags!=""]
df2 <- as.data.frame(Reduce(cbind, lapply(tags, function(i) sapply(t, function(j) +(any(grepl(i, j), na.rm = TRUE))))))
